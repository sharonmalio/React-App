{"ast":null,"code":"import _regeneratorRuntime from\"/home/smalio/PycharmProjects/WFP-React-App/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchData),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(watchSaga);import{call,put,takeEvery}from'redux-saga/effects';import{FETCH_DATA_INIT,fetchDataSuccess,fetchDataFailure}from'./actions';import Api from'../lib/services';function fetchData(payload){var response;return _regeneratorRuntime.wrap(function fetchData$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return call(Api.fetchData,payload.payload);case 3:response=_context.sent;_context.next=6;return put(fetchDataSuccess(response));case 6:_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);_context.next=12;return put(fetchDataFailure());case 12:case\"end\":return _context.stop();}}},_marked,null,[[0,8]]);}function watchSaga(){return _regeneratorRuntime.wrap(function watchSaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeEvery(FETCH_DATA_INIT,fetchData);case 2:case\"end\":return _context2.stop();}}},_marked2);}export default watchSaga;","map":{"version":3,"sources":["/home/smalio/PycharmProjects/WFP-React-App/src/redux/saga.js"],"names":["fetchData","watchSaga","call","put","takeEvery","FETCH_DATA_INIT","fetchDataSuccess","fetchDataFailure","Api","payload","response"],"mappings":"sKAUUA,S,iDAWAC,S,EArBV,OAASC,IAAT,CAAeC,GAAf,CAAoBC,SAApB,KAAoC,oBAApC,CAEA,OACIC,eADJ,CAEIC,gBAFJ,CAGIC,gBAHJ,KAIW,WAJX,CAMA,MAAOC,CAAAA,GAAP,KAAgB,iBAAhB,CAEA,QAAUR,CAAAA,SAAV,CAAoBS,OAApB,iKAE0B,MAAMP,CAAAA,IAAI,CAACM,GAAG,CAACR,SAAL,CAAgBS,OAAO,CAACA,OAAxB,CAAV,CAF1B,OAEcC,QAFd,+BAGQ,MAAMP,CAAAA,GAAG,CAACG,gBAAgB,CAACI,QAAD,CAAjB,CAAT,CAHR,uGAMO,MAAMP,CAAAA,GAAG,CAACI,gBAAgB,EAAjB,CAAT,CANP,oEAWA,QAAUN,CAAAA,SAAV,yIACI,MAAMG,CAAAA,SAAS,CAACC,eAAD,CAAkBL,SAAlB,CAAf,CADJ,wDAIA,cAAeC,CAAAA,SAAf","sourcesContent":["import { call, put, takeEvery} from 'redux-saga/effects'\n\nimport {  \n    FETCH_DATA_INIT,\n    fetchDataSuccess,\n    fetchDataFailure\n    } from './actions'\n\nimport Api from '../lib/services'\n\nfunction* fetchData(payload) {\n    try {\n        const response =  yield call(Api.fetchData, payload.payload)\n        yield put(fetchDataSuccess(response))\n        \n    } catch (error) {\n       yield put(fetchDataFailure())\n    }\n    \n}\n\nfunction* watchSaga() {\n    yield takeEvery(FETCH_DATA_INIT, fetchData)\n  }\n\nexport default watchSaga"]},"metadata":{},"sourceType":"module"}